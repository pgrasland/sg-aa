---
import Badge from "../../components/badge.astro";
import MarkdownRenderer from "../../components/markdown-renderer.astro";
import type IArticle from "../../interfaces/IArticle";
import fetchApi from "../../lib/strapi";

import Layout from "../../layouts/Layout.astro";

import { Image } from "astro:assets";

export async function getStaticPaths() {
  const articles = await fetchApi<IArticle[]>({
    endpoint: "articles",
    wrappedByKey: "data",
    query: { populate: "tags,media" },
  });

  return articles.map((article) => ({
    params: { slug: article.attributes.slug },
    props: article,
  }));
}
type Props = IArticle;

const article = Astro.props;
---

<Layout title={article.attributes.title}>
  <main class="flex w-full flex-col gap-8">
    <h1 class="container mx-2 max-w-4xl text-6xl font-extrabold lg:mx-auto">
      {article.attributes.title}
    </h1>
    <ul
      class="container mx-2 flex max-w-4xl list-none flex-row gap-4 text-xl lg:mx-auto"
    >
      {
        article.attributes.tags.data.map((tag) => (
          <li>
            <Badge tag={tag} />
          </li>
        ))
      }
    </ul>
    <div class="container prose prose-lg mx-2 max-w-4xl text-black lg:mx-auto">
      <MarkdownRenderer markdown={article.attributes.summary} />
    </div>
    <Image
      class="h-auto max-h-[40rem] w-full object-cover px-4"
      src={`${import.meta.env.STRAPI_URL}${article.attributes.media.data.attributes.url}`}
      alt={article.attributes.media.data.attributes.alternativeText}
      width={article.attributes.media.data.attributes.width}
      height={article.attributes.media.data.attributes.height}
    />
    <div class="container prose prose-lg mx-2 max-w-4xl text-black lg:mx-auto">
      <MarkdownRenderer markdown={article.attributes.content} />
    </div>
  </main>
</Layout>

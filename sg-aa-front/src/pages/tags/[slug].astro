---
import Layout from '../../layouts/Layout.astro';


import fetchApi from '../../lib/strapi';
import type IArticle from '../../interfaces/IArticle';
import Container from '../../components/container.astro';
import ArticlePreview from "../../components/article-preview.astro"
import ITag from '../../interfaces/ITag';
import ListLayout from '../../layouts/ListLayout.astro';

export async function getStaticPaths() {
	const tags = await fetchApi<ITag[]>({
		endpoint: 'tags', // the content type to fetch
		wrappedByKey: 'data', // the key to unwrap the response,
		query: { 'populate[articles][populate][0]': 'tags,media'},
	});

	return tags.map((tag) => ({
		params: { slug: tag.attributes.slug },
		props: tag,	
	}));
}
type Props = ITag;

const tag = Astro.props;

const articles = tag.attributes.articles.data;

const pinnedArticle = articles.find(article => article.attributes.pinned ) || articles[0];
const otherArticles = articles.filter(article => article !== pinnedArticle);

---

<ListLayout pinnedArticle={pinnedArticle} otherArticles={otherArticles}>